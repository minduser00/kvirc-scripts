# Calculator
# Written by HelLViS69 (2005)

# This addon is pretty simple. It does a single thing and it attempts
# to do it really well. With the comments, the script structure
# should be really straightforward.

# register the script: this must be the first instruction executed
# since it will abort with an error when a greater version is already installed
addon.register("calculator","1.0.0",$tr("Calculator","calculator"),$tr("A simple calculator","calculator"),"3.2.0.99")
{
	# This is our uninstall callback: it will be called by KVIrc when addon.uninstall is invoked
	
	# Kill all our aliases
	alias(calculator){}
	
	# And de class
	objects.killclass "hellcalc"

	# This is an automatically generated alias that will erase the installed files
	if($aliasBody(calculator_uninstallfiles)){
		calculator_uninstallfiles
		alias(calculator_uninstallfiles){}
	}

	# Done
}

# Ok, addon.register succeeded. We can go on with the installation.

# Get the path that this script was launched from
%mypath = $file.extractPath($0)

# get the installer helper class (this is pretty standard and included in the distro)
parse %mypath/utils/installer.kvs

# The installer will copy our files and generate automatically
# an uninstallation alias for them
%installer = $new(installer,0,myinstaller)
# copy files in each subdirectory
# the pics
%installer->$copyFiles("%mypath/pics/","*.png","$file.localdir("pics")")
# the translations
%installer->$copyFiles("%mypath/locale/","*.mo","$file.localdir("locale")")
# then generate the uninstall alias
%installer->$generateUninstallAlias("calculator_uninstallfiles")
# finally kill the installer helper
delete %installer

# class definition
class(hellcalc,dialog){
	constructor(){
		$$->$setWindowTitle(%HellvisNome %HellvisVersione :: $tr("Calculator",hellvis))
		$$->$setFocusPolicy(ClickFocus)

		%l=$new(layout,$$)
		%l->$setMargin(5)
		%l->$setSpacing(5)

		$$->%lcd=$new(lcdnumber,$$)
		$$->%lcd->$setSegmentStyle(Filled)
		$$->%lcd->$setMode(DEC)
		$$->%lcd->$setNumDigits(12)
		$$->%lcd->$setSmallDecimalPoint(1)
		%l->$addMultiCellWidget($$->%lcd,0,0,0,6)

		%e=$new(button,$$)
		%e->$setText("x \* 10\^y")
		%l->$addWidget(%e,1,0)
		objects.connect %e "clicked" $$ e

		%div=$new(button,$$)
		%div->$setText("\/")
		%l->$addWidget(%div,1,1)
		objects.connect %div "clicked" $$ diviso

		%per=$new(button,$$)
		%per->$setText("X")
		%l->$addWidget(%per,1,2)
		objects.connect %per "clicked" $$ per

		%meno=$new(button,$$)
		%meno->$setText("\-")
		%l->$addWidget(%meno,1,3)
		objects.connect %meno "clicked" $$ meno

		%b7=$new(button,$$)
		%b7->$setText("7")
		%l->$addWidget(%b7,2,0)
		objects.connect %b7 "clicked" $$ digit7

		%b8=$new(button,$$)
		%b8->$setText("8")
		%l->$addWidget(%b8,2,1)
		objects.connect %b8 "clicked" $$ digit8

		%b9=$new(button,$$)
		%b9->$setText("9")
		%l->$addWidget(%b9,2,2)
		objects.connect %b9 "clicked" $$ digit9

		%piu=$new(button,$$)
		%piu->$setText("\n\+\n\n")
		%l->$addMultiCellWidget(%piu,2,3,3,3)
		objects.connect %piu "clicked" $$ piu

		%b4=$new(button,$$)
		%b4->$setText("4")
		%l->$addWidget(%b4,3,0)
		objects.connect %b4 "clicked" $$ digit4

		%b5=$new(button,$$)
		%b5->$setText("5")
		%l->$addWidget(%b5,3,1)
		objects.connect %b5 "clicked" $$ digit5

		%b6=$new(button,$$)
		%b6->$setText("6")
		%l->$addWidget(%b6,3,2)
		objects.connect %b6 "clicked" $$ digit6

		%b1=$new(button,$$)
		%b1->$setText("1")
		%l->$addWidget(%b1,4,0)
		objects.connect %b1 "clicked" $$ digit1

		%b2=$new(button,$$)
		%b2->$setText("2")
		%l->$addWidget(%b2,4,1)
		objects.connect %b2 "clicked" $$ digit2

		%b3=$new(button,$$)
		%b3->$setText("3")
		%l->$addWidget(%b3,4,2)
		objects.connect %b3 "clicked" $$ digit3

		%ris=$new(button,$$)
		%ris->$setText("\n\=\n\n")
		%l->$addMultiCellWidget(%ris,4,5,3,3)
		objects.connect %ris "clicked" $$ ris

		%b0=$new(button,$$)
		%b0->$setText("0")
		%l->$addMultiCellWidget(%b0,5,5,0,1)
		objects.connect %b0 "clicked" $$ digit0

		%virgola=$new(button,$$)
		%virgola->$setText("\,")
		%l->$addWidget(%virgola,5,2)
		objects.connect %virgola "clicked" $$ virg

		%c=$new(button,$$)
		%c->$setText("C")
		%l->$addWidget(%c,1,5)
		objects.connect %c "clicked" $$ C

		%ac=$new(button,$$)
		%ac->$setText("AC")
		%l->$addWidget(%ac,1,6)
		objects.connect %ac "clicked" $$ AC

		%par_a=$new(button,$$)
		%par_a->$setText("\(")
		%l->$addWidget(%par_a,2,5)
		objects.connect %par_a "clicked" $$ para

		%par_c=$new(button,$$)
		%par_c->$setText("\)")
		%l->$addWidget(%par_c,2,6)
		objects.connect %par_c "clicked" $$ parc

		%mr=$new(button,$$)
		%mr->$setText("MR")
		%l->$addWidget(%mr,3,5)
		objects.connect %mr "clicked" $$ MR

		%ms=$new(button,$$)
		%ms->$setText("MS")
		%l->$addWidget(%ms,3,6)
		objects.connect %ms "clicked" $$ MS

		%mpiu=$new(button,$$)
		%mpiu->$setText("M\+")
		%l->$addWidget(%mpiu,4,5)
		objects.connect %mpiu "clicked" $$ MP

		%perc=$new(button,$$)
		%perc->$setText("\%")
		%l->$addWidget(%perc,4,6)
		objects.connect %perc "clicked" $$ percent

		%mc=$new(button,$$)
		%mc->$setText("MC")
		%l->$addWidget(%mc,5,5)
		objects.connect %mc "clicked" $$ MC

		%sign=$new(button,$$)
		%sign->$setText("\+\/\-")
		%l->$addWidget(%sign,5,6)
		objects.connect %sign "clicked" $$ sign

		$$->%display=0
		$$->%virgSet=$false
		$$->%newNum=$true
	}

	setDigit($0){
		if (!$$->%newNum){
			$$->$displayToZero()
			$$->%newNum=$true
		}
		$$->%display.=$0
		if(($str.left($$->%display,1)=="0") && !$str.equal($str.left($$->%display,2),"0."))
			$$->%display=$str.rightfromfirst($$->%display,"0")
		$$->%lcd->$displayStr($$->%display)
	}

	displayToZero(){
		$$->%display=0;
		$$->%lcd->$displayInt(0);
		$$->%virgSet=$false
	}

	digit0(){ $$->$setDigit(0); }
	digit1(){ $$->$setDigit(1); }
	digit2(){ $$->$setDigit(2); }
	digit3(){ $$->$setDigit(3); }
	digit4(){ $$->$setDigit(4); }
	digit5(){ $$->$setDigit(5); }
	digit6(){ $$->$setDigit(6); }
	digit7(){ $$->$setDigit(7); }
	digit8(){ $$->$setDigit(8); }
	digit9(){ $$->$setDigit(9); }

	virg(){
		#only one . per value
		if(!$$->%virgSet){
			$$->$setDigit(.);
			$$->%virgSet=$true
		}
	}
	
	piu(){
		$$->%op.=$$->%display\+;
		$$->%newNum=$false
	}
	meno(){
		$$->%op.=$$->%display\-;
		$$->%newNum=$false
	}
	per(){
		$$->%op.=$$->%display\*;
		$$->%newNum=$false
	}
	diviso(){
		$$->%op.=$$->%display\/;
		$$->%newNum=$false
	}
	
	percent(){
		$$->%op.=$$->%display\%;
		$$->$displayToZero
	}

	e(){
		$$->%op.=$$->%display\* 10\^;
		$$->$displayToZero
	}
	
	ris(){
		$$->%op=$str.append($$->%op,$$->%display)
		echo -d $$->%op
		eval "\%ris=\$($$->%op)"
		$$->%lcd->$displayStr(%ris)
		$$->%op="";
		$$->%display=%ris
		$$->%newNum=$false
	}

	C(){
		$$->%display-=$$->%tmp
		$$->%lcd->$displayStr(0);
		$$->%virgSet=$false
	}

	AC(){
		$$->%display=0
		$$->%lcd->$displayStr($$->%display)
		$$->%virgSet=$false
	}

	sign(){
		$$->%display*=-1
		$$->%lcd->$displayStr($$->%display)
	}
	
	para(){
	}
	
	parc(){
	}
	
	MR(){
	}
	
	MS(){
	}
	
	MP(){
	}
	
	MC(){
	}
	


	keyPressEvent(key){
		echo -d $0
		switch -p ($0){
			case("0");
			case("1");
			case("2");
			case("3");
			case("4");
			case("5");
			case("6");
			case("7");
			case("8");
			case("9"): $$->$setDigit($0);
				break;
			case("."): $$->$virg();
				break;
			case("+"): $$->$piu();
				break;
			case("-"): $$->$meno();
				break;
			case("*"): $$->$per();
				break;
			case("/"): $$->$diviso();
				break;
			case("Return");
			case("Enter"): $$->$ris();
				break;
			case("("): $$->$para();
				break;
			case(")"): $$->$parc();
				break;
			default:
				return $true
				break;
		}
	return $false
	}
}

# Now time to define our real aliases

alias(calculator){
	if(%X){
		delete -q %X
	}
	%X=$new(hellcalc)	
	%X->$show()
}


# Done: the addon is installed and running: enjoy :)
# HelLViS69 25.09.2005

